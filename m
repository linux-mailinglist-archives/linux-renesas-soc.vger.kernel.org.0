Return-Path: <linux-renesas-soc+bounces-23576-lists+linux-renesas-soc=lfdr.de@vger.kernel.org>
X-Original-To: lists+linux-renesas-soc@lfdr.de
Delivered-To: lists+linux-renesas-soc@lfdr.de
Received: from sv.mirrors.kernel.org (sv.mirrors.kernel.org [IPv6:2604:1380:45e3:2400::1])
	by mail.lfdr.de (Postfix) with ESMTPS id 99569C055A2
	for <lists+linux-renesas-soc@lfdr.de>; Fri, 24 Oct 2025 11:33:37 +0200 (CEST)
Received: from smtp.subspace.kernel.org (relay.kernel.org [52.25.139.140])
	(using TLSv1.2 with cipher ECDHE-ECDSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by sv.mirrors.kernel.org (Postfix) with ESMTPS id 9BF40401D8D
	for <lists+linux-renesas-soc@lfdr.de>; Fri, 24 Oct 2025 09:28:08 +0000 (UTC)
Received: from localhost.localdomain (localhost.localdomain [127.0.0.1])
	by smtp.subspace.kernel.org (Postfix) with ESMTP id 12A3526CE37;
	Fri, 24 Oct 2025 09:27:54 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org;
	dkim=pass (2048-bit key) header.d=kernel.org header.i=@kernel.org header.b="lEV6Vnql"
X-Original-To: linux-renesas-soc@vger.kernel.org
Received: from smtp.kernel.org (aws-us-west-2-korg-mail-1.web.codeaurora.org [10.30.226.201])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id E224B30AACB
	for <linux-renesas-soc@vger.kernel.org>; Fri, 24 Oct 2025 09:27:53 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=none smtp.client-ip=10.30.226.201
ARC-Seal:i=1; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1761298074; cv=none; b=j++cBz6UW/Sbbf27BYPQFVYWLtzrocDlG+gocnzszLCA2MnptyELyBrCIAT5WiWVsUaxpRVNekXc0my8RlQr2O9AWZqKdB7Vkf7l7/Ro9Q21XYSQx5DHQeeZHbMMd3MlrdOVRcmCiT7AUvqlNzvgMbuZwQQDvdepaIXaxtTiH6o=
ARC-Message-Signature:i=1; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1761298074; c=relaxed/simple;
	bh=JtAgQYabJoYpbAKikJiDKcmhcEvLDKqLOeVG9wlYeU8=;
	h=Date:Message-ID:From:To:Cc:Subject:In-Reply-To:References:
	 MIME-Version:Content-Type; b=NSmQkyUfjITqhkaoO2spKuCdREqHhClfIZYL4aoARf7z/HbCr7plhZa5sVYKIpp7epMpgYap4b4jOL9MyvoV2bS5T2J6+EUMpwhrIkSO6pmQ0RYXQw7cxPMFKfu7px2hXng79rk1gTSv7c0vRD63vRKHUhXtAAd7mrv6DCJtlk4=
ARC-Authentication-Results:i=1; smtp.subspace.kernel.org; dkim=pass (2048-bit key) header.d=kernel.org header.i=@kernel.org header.b=lEV6Vnql; arc=none smtp.client-ip=10.30.226.201
Received: by smtp.kernel.org (Postfix) with ESMTPSA id 4F7B8C4CEF1;
	Fri, 24 Oct 2025 09:27:53 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=kernel.org;
	s=k20201202; t=1761298073;
	bh=JtAgQYabJoYpbAKikJiDKcmhcEvLDKqLOeVG9wlYeU8=;
	h=Date:From:To:Cc:Subject:In-Reply-To:References:From;
	b=lEV6Vnqlk63vvYBY5YiNwCxLV2t046WuVTH0bJu7v0NPJTvyR5bdMD+46tN94eZs7
	 E9i6wVfS/wnke+C7L5ar3jT+19O+7l60IXYUQLIi+AAMHINtBAatKW1sXvCCeiVJjq
	 JcJ8uu+/YM9j8WmVMNTGQGl1Pk9sR8bLRHY1XoQEvedObLFXLnWTVkFv6aH7nKuwJ5
	 TqS4v10GhIDA5tJoQ3vA1s2WyW+mENZwQw0Yqvfv3wjVXSblIPlZI3ddacF/OqYoLa
	 GAVYXGOUtOnadjlx9UKQvvNNfvHkP+jBJ26GBkUxZM53y53ddjS2wJ63VMQvr9TV3p
	 fXEr7mt+9mLQg==
Received: from 91-165-189-16.subs.proxad.net ([91.165.189.16] helo=lobster-girl.misterjones.org)
	by disco-boy.misterjones.org with esmtpsa  (TLS1.3) tls TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384
	(Exim 4.98.2)
	(envelope-from <maz@kernel.org>)
	id 1vCE5O-0000000GnSj-3WVw;
	Fri, 24 Oct 2025 09:27:51 +0000
Date: Fri, 24 Oct 2025 10:27:50 +0100
Message-ID: <87sef83azt.wl-maz@kernel.org>
From: Marc Zyngier <maz@kernel.org>
To: Marek Vasut <marek.vasut@mailbox.org>
Cc: linux-arm-kernel@lists.infradead.org,
	Anshuman Khandual <anshuman.khandual@arm.com>,
	Catalin Marinas <catalin.marinas@arm.com>,
	Geert Uytterhoeven <geert+renesas@glider.be>,
	Ryan Roberts <ryan.roberts@arm.com>,
	Will Deacon <will@kernel.org>,
	Yicong Yang <yangyicong@hisilicon.com>,
	linux-renesas-soc@vger.kernel.org
Subject: Re: [PATCH] arm64: guard AMU register access with ARM64_HAS_AMU_EXTN
In-Reply-To: <adefdb3e-7a10-42a2-b2fc-8c1490762454@mailbox.org>
References: <20251022133621.178546-1-marek.vasut+renesas@mailbox.org>
	<86347bvx0f.wl-maz@kernel.org>
	<07391913-aab6-4d92-b75f-278506f51397@mailbox.org>
	<861pmvvv2g.wl-maz@kernel.org>
	<24c8da41-37db-4e69-b9aa-e33b2154acb0@mailbox.org>
	<87y0p13dlh.wl-maz@kernel.org>
	<adefdb3e-7a10-42a2-b2fc-8c1490762454@mailbox.org>
User-Agent: Wanderlust/2.15.9 (Almost Unreal) SEMI-EPG/1.14.7 (Harue)
 FLIM-LB/1.14.9 (=?UTF-8?B?R29qxY0=?=) APEL-LB/10.8 EasyPG/1.0.0 Emacs/30.1
 (aarch64-unknown-linux-gnu) MULE/6.0 (HANACHIRUSATO)
Precedence: bulk
X-Mailing-List: linux-renesas-soc@vger.kernel.org
List-Id: <linux-renesas-soc.vger.kernel.org>
List-Subscribe: <mailto:linux-renesas-soc+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:linux-renesas-soc+unsubscribe@vger.kernel.org>
MIME-Version: 1.0 (generated by SEMI-EPG 1.14.7 - "Harue")
Content-Type: text/plain; charset=US-ASCII
X-SA-Exim-Connect-IP: 91.165.189.16
X-SA-Exim-Rcpt-To: marek.vasut@mailbox.org, linux-arm-kernel@lists.infradead.org, anshuman.khandual@arm.com, catalin.marinas@arm.com, geert+renesas@glider.be, ryan.roberts@arm.com, will@kernel.org, yangyicong@hisilicon.com, linux-renesas-soc@vger.kernel.org
X-SA-Exim-Mail-From: maz@kernel.org
X-SA-Exim-Scanned: No (on disco-boy.misterjones.org); SAEximRunCond expanded to false

On Thu, 23 Oct 2025 16:58:49 +0100,
Marek Vasut <marek.vasut@mailbox.org> wrote:
> 
> On 10/23/25 4:19 PM, Marc Zyngier wrote:
> 
> Hello Marc,
> 
> >> Except right now, I still trigger the AMU faults even with
> >> ARM64_HAS_AMU_EXTN=n , which I think should not happen ?
> > 
> > ARM64_HAS_AMU_EXTN is a *capability*, not a configuration.
> > CONFIG_ARM64_AMU_EXTN is the configuration. I have the feeling you're
> > mixing the two.
> > 
> > Irrespective of the configuration, we access the AMU registers
> > depending on the what is advertised, because we *must* make these
> > registers inaccessible from EL0, no matter what.
> 
> Ahhh, I was missing this part, thank you for clarifying.
> 
> >> I would much rather be able to disable ARM64_HAS_AMU_EXTN in kernel
> >> config for the old devices with old firmware, without triggering the
> >> faults ... and say that everything which is going to be upstream will
> >> always use new firmware that has proper working AMU support.
> > 
> > No, that's the wrong approach. If you leave the AMU accessible to EL0,
> > you're leaking data to userspace, and that's pretty wrong, no matter
> > how you look at it.
> > 
> > I also think your hack works by pure luck, because at the point where
> > your CPUs are booting, the alternatives are yet not in place (the
> > kernel patching happens much later). In short, this breaks
> > *everything*.
> > 
> > As I indicated before, you have two options:
> > 
> > - either you update your firmware and leave the kernel alone
> > 
> > - or you implement the workaround as ID register override so that you
> >    *must* pass something on the kernel command line to boot, and by
> >    then accept that you will leak critical timing information to
> >    userspace.
> > 
> > Any other option, including guarding the macro with a config option is
> > *not* acceptable.
> 
> Since I am getting an exception when I access the AMU register, would
> it be possible to trap that exception, and report something to the
> user instead of outright crashing with no output ?

The trap exists, and the exception is being routed to EL3. There is
nothing you can do about that if running at EL2, and if at EL1, you'd
need to take the trap to EL2 to handle it. And if you can do that,
what do you do?  Not doing anything is wrong, and doing something will
nuke your machine.

> Similar to what Linux already does on the various speculative
> execution bugs on x86, something like this?
> 
> "
> MDS CPU bug present and SMT on, data leak possible. See
> https://www.kernel.org/doc/html/latest/admin-guide/hw-vuln/mds.html
> for more details.
> "

You're completely off base. The problem at hand has nothing to do with
speculation, and everything to do with access permission to counter
registers.

I also wouldn't be surprised if you could take your whole machine down
from userspace just by ticking some of the AM*_EL0 registers (the
pseudocode clearly shows that there is a route to EL3 in this case).

Honestly, I think you should stop trying to papering over this issue
behind the user's back. If you want this addressed, do it so that the
user knows their machine is fsck'd, and that they are OK with that. Do
it by implementing an ID register override that requires a kernel
command-line argument.

Do I sound like a stuck record? Probably. But that's IMO the only
acceptable solution for what you have. I'm looking forward to
reviewing a patch implementing that suggestion, but I'll stop even
thinking of how to paper over this in the way you suggest.

Thanks,

	M.

-- 
Jazz isn't dead. It just smells funny.

