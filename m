Return-Path: <linux-renesas-soc+bounces-23437-lists+linux-renesas-soc=lfdr.de@vger.kernel.org>
X-Original-To: lists+linux-renesas-soc@lfdr.de
Delivered-To: lists+linux-renesas-soc@lfdr.de
Received: from am.mirrors.kernel.org (am.mirrors.kernel.org [147.75.80.249])
	by mail.lfdr.de (Postfix) with ESMTPS id A80E8BFC707
	for <lists+linux-renesas-soc@lfdr.de>; Wed, 22 Oct 2025 16:21:12 +0200 (CEST)
Received: from smtp.subspace.kernel.org (relay.kernel.org [52.25.139.140])
	(using TLSv1.2 with cipher ECDHE-ECDSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by am.mirrors.kernel.org (Postfix) with ESMTPS id 1D34C1A0606A
	for <lists+linux-renesas-soc@lfdr.de>; Wed, 22 Oct 2025 14:21:22 +0000 (UTC)
Received: from localhost.localdomain (localhost.localdomain [127.0.0.1])
	by smtp.subspace.kernel.org (Postfix) with ESMTP id 087A834BA5C;
	Wed, 22 Oct 2025 14:20:20 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org;
	dkim=pass (2048-bit key) header.d=kernel.org header.i=@kernel.org header.b="naklbOMT"
X-Original-To: linux-renesas-soc@vger.kernel.org
Received: from smtp.kernel.org (aws-us-west-2-korg-mail-1.web.codeaurora.org [10.30.226.201])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id D53B734C806
	for <linux-renesas-soc@vger.kernel.org>; Wed, 22 Oct 2025 14:20:19 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=none smtp.client-ip=10.30.226.201
ARC-Seal:i=1; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1761142819; cv=none; b=aPaKa9dT89BSDCJ+pa1sPZ5UzBrErNzV5X6BCg5SLpFDdWnaEm71VZwFLm/heqLO3NQIG3K4ltarLdmfVRCcD4ImMBIzI0ix8crfdLO2Nidth1TeePGX8l0SDIm2gMh2Lvf/bfBK84wWWoda82ezx7bBEsrgf8JVqfdcZHfBlY4=
ARC-Message-Signature:i=1; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1761142819; c=relaxed/simple;
	bh=JhTwXK3F6zhty33hUA0ZGDjVjy9mQSxspooOOq1o4RY=;
	h=Date:Message-ID:From:To:Cc:Subject:In-Reply-To:References:
	 MIME-Version:Content-Type; b=GbTg4e/hpW7Hjh3YWw9WEzaWolP5wk+V80/eacFogUk1vCK+HHWSmb6yPB4hMogrjS5Hqzgs+vZFXAZaYf6hi1+LzdWGh4lRh+LZNCoStQvjbOULyeEPZj9SMLq9hISYqbT/f2b45ip68/HHN0KvAi1GZW7y9+UQqq4HwmAlB+U=
ARC-Authentication-Results:i=1; smtp.subspace.kernel.org; dkim=pass (2048-bit key) header.d=kernel.org header.i=@kernel.org header.b=naklbOMT; arc=none smtp.client-ip=10.30.226.201
Received: by smtp.kernel.org (Postfix) with ESMTPSA id 580B7C4CEF5;
	Wed, 22 Oct 2025 14:20:19 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=kernel.org;
	s=k20201202; t=1761142819;
	bh=JhTwXK3F6zhty33hUA0ZGDjVjy9mQSxspooOOq1o4RY=;
	h=Date:From:To:Cc:Subject:In-Reply-To:References:From;
	b=naklbOMT5pH+5/pK8mBmJqkMVFRruUFLTZW61aU4FC2KZRe6lw3qIj5+ECVRRKI67
	 S5BCVcF+M6McBr4PS6+uZZHFfS6DlubgzDbS2nOIXWzmsUagXDTHbY66++ODH34mFo
	 LuWYCCYrdgrDCBUL7Hy/4rb468NogYcH5CmtW65OrYmDsQkSbP3WbrtkP8dxqsEoeJ
	 L60bskemykJGEkaXQ7rSmfbQ3pobpfi7Q7U0cpaqfcvj9xVo/P7ieiq6A0sEQ1VkY8
	 GxyBRXgfAdjDkUc3vip4TDlnOUifEs8vhQgvlAMXr0jOhiJ9qDvlpTl3krpkCYH9NC
	 tv4FqkWgUtohw==
Received: from sofa.misterjones.org ([185.219.108.64] helo=goblin-girl.misterjones.org)
	by disco-boy.misterjones.org with esmtpsa  (TLS1.3) tls TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384
	(Exim 4.98.2)
	(envelope-from <maz@kernel.org>)
	id 1vBZhJ-0000000GDda-052k;
	Wed, 22 Oct 2025 14:20:17 +0000
Date: Wed, 22 Oct 2025 15:20:16 +0100
Message-ID: <86347bvx0f.wl-maz@kernel.org>
From: Marc Zyngier <maz@kernel.org>
To: Marek Vasut <marek.vasut+renesas@mailbox.org>
Cc: linux-arm-kernel@lists.infradead.org,
	Anshuman Khandual <anshuman.khandual@arm.com>,
	Catalin Marinas <catalin.marinas@arm.com>,
	Geert Uytterhoeven <geert+renesas@glider.be>,
	Ryan Roberts <ryan.roberts@arm.com>,
	Will Deacon <will@kernel.org>,
	Yicong Yang <yangyicong@hisilicon.com>,
	linux-renesas-soc@vger.kernel.org
Subject: Re: [PATCH] arm64: guard AMU register access with ARM64_HAS_AMU_EXTN
In-Reply-To: <20251022133621.178546-1-marek.vasut+renesas@mailbox.org>
References: <20251022133621.178546-1-marek.vasut+renesas@mailbox.org>
User-Agent: Wanderlust/2.15.9 (Almost Unreal) SEMI-EPG/1.14.7 (Harue)
 FLIM-LB/1.14.9 (=?UTF-8?B?R29qxY0=?=) APEL-LB/10.8 EasyPG/1.0.0 Emacs/30.1
 (aarch64-unknown-linux-gnu) MULE/6.0 (HANACHIRUSATO)
Precedence: bulk
X-Mailing-List: linux-renesas-soc@vger.kernel.org
List-Id: <linux-renesas-soc.vger.kernel.org>
List-Subscribe: <mailto:linux-renesas-soc+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:linux-renesas-soc+unsubscribe@vger.kernel.org>
MIME-Version: 1.0 (generated by SEMI-EPG 1.14.7 - "Harue")
Content-Type: text/plain; charset=US-ASCII
X-SA-Exim-Connect-IP: 185.219.108.64
X-SA-Exim-Rcpt-To: marek.vasut+renesas@mailbox.org, linux-arm-kernel@lists.infradead.org, anshuman.khandual@arm.com, catalin.marinas@arm.com, geert+renesas@glider.be, ryan.roberts@arm.com, will@kernel.org, yangyicong@hisilicon.com, linux-renesas-soc@vger.kernel.org
X-SA-Exim-Mail-From: maz@kernel.org
X-SA-Exim-Scanned: No (on disco-boy.misterjones.org); SAEximRunCond expanded to false

On Wed, 22 Oct 2025 14:35:28 +0100,
Marek Vasut <marek.vasut+renesas@mailbox.org> wrote:
> 
> The AMU configuration register access may fault and prevent successful
> kernel boot. This can occur for example in case the firmware does not
> allow AMU counter access from EL1. Guard the AMU configuration register
> access with ARM64_HAS_AMU_EXTN to prevent this fault if ARM64_HAS_AMU_EXTN
> Kconfig option is explicitly disabled. Other interaction with the AMU is
> already guarded by similar ifdeffery.
> 
> Fixes: 87a1f063464a ("arm64: trap to EL1 accesses to AMU counters from EL0")
> Signed-off-by: Marek Vasut <marek.vasut+renesas@mailbox.org>
> ---
> Cc: Anshuman Khandual <anshuman.khandual@arm.com>
> Cc: Catalin Marinas <catalin.marinas@arm.com>
> Cc: Geert Uytterhoeven <geert+renesas@glider.be>
> Cc: Marc Zyngier <maz@kernel.org>
> Cc: Ryan Roberts <ryan.roberts@arm.com>
> Cc: Will Deacon <will@kernel.org>
> Cc: Yicong Yang <yangyicong@hisilicon.com>
> Cc: linux-arm-kernel@lists.infradead.org
> Cc: linux-renesas-soc@vger.kernel.org
> ---
>  arch/arm64/mm/proc.S | 4 ++++
>  1 file changed, 4 insertions(+)
> 
> diff --git a/arch/arm64/mm/proc.S b/arch/arm64/mm/proc.S
> index 86818511962b6..123538ffeda6b 100644
> --- a/arch/arm64/mm/proc.S
> +++ b/arch/arm64/mm/proc.S
> @@ -145,7 +145,9 @@ SYM_FUNC_START(cpu_do_resume)
>  	ubfx	x11, x11, #1, #1
>  	msr	oslar_el1, x11
>  	reset_pmuserenr_el0 x0			// Disable PMU access from EL0
> +alternative_if ARM64_HAS_AMU_EXTN
>  	reset_amuserenr_el0 x0			// Disable AMU access from EL0
> +alternative_else_nop_endif

Why?

We ensure that the AMU is available in the macro itself by checking
for ID_AA64PFR0_EL1.AMU. If the AMu isn't present on this CPU, we skip
the offending sysreg access. This is similar to what we do for the
PMU.

Does your HW advertise an AMU, but doesn't actually have one?

	M.

-- 
Without deviation from the norm, progress is not possible.

