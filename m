Return-Path: <linux-renesas-soc+bounces-23439-lists+linux-renesas-soc=lfdr.de@vger.kernel.org>
X-Original-To: lists+linux-renesas-soc@lfdr.de
Delivered-To: lists+linux-renesas-soc@lfdr.de
Received: from dfw.mirrors.kernel.org (dfw.mirrors.kernel.org [IPv6:2605:f480:58:1:0:1994:3:14])
	by mail.lfdr.de (Postfix) with ESMTPS id C6119BFCC0C
	for <lists+linux-renesas-soc@lfdr.de>; Wed, 22 Oct 2025 17:04:32 +0200 (CEST)
Received: from smtp.subspace.kernel.org (relay.kernel.org [52.25.139.140])
	(using TLSv1.2 with cipher ECDHE-ECDSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by dfw.mirrors.kernel.org (Postfix) with ESMTPS id 5DA5F5008A7
	for <lists+linux-renesas-soc@lfdr.de>; Wed, 22 Oct 2025 15:03:40 +0000 (UTC)
Received: from localhost.localdomain (localhost.localdomain [127.0.0.1])
	by smtp.subspace.kernel.org (Postfix) with ESMTP id B70D134C9AA;
	Wed, 22 Oct 2025 15:02:18 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org;
	dkim=pass (2048-bit key) header.d=kernel.org header.i=@kernel.org header.b="KJmSQyIt"
X-Original-To: linux-renesas-soc@vger.kernel.org
Received: from smtp.kernel.org (aws-us-west-2-korg-mail-1.web.codeaurora.org [10.30.226.201])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id 92A9134E763
	for <linux-renesas-soc@vger.kernel.org>; Wed, 22 Oct 2025 15:02:18 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=none smtp.client-ip=10.30.226.201
ARC-Seal:i=1; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1761145338; cv=none; b=XQt7tc+GMvukU/RaA9s/Q4GJNrwB9R0L2B84cbTi5U0fFZW9/xB+cK6xTCWVrTOhVKQ2cKRaBbJQiSIvWukHKott61kqFOM0IuRHx1wCnAnv3lIOg6JDOiSJgU+A1ARjeBO1aVAJOyZtd6A9PtuXzVAQVjB6cExAFGL4WBUpgus=
ARC-Message-Signature:i=1; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1761145338; c=relaxed/simple;
	bh=k3fJI9mIBTsdVJCA44WRE8AYW3GDEJaeAfXMOod7lh0=;
	h=Date:Message-ID:From:To:Cc:Subject:In-Reply-To:References:
	 MIME-Version:Content-Type; b=sxfZYq0ertwehrxi2cHbay6y+0+2sHwyV7zWv8zK8krOvWmZxO6nPR36/FNC+F7nkpvUKKzu+8RS5HzfZxuCUWNtM/w8t6FY7WTLn835DEW135TTr3cv3PMYL+6XGPFWygVUrtS4TaZwmSyTyiec7kzOY/sE2jEDEdxHQ5YDkcg=
ARC-Authentication-Results:i=1; smtp.subspace.kernel.org; dkim=pass (2048-bit key) header.d=kernel.org header.i=@kernel.org header.b=KJmSQyIt; arc=none smtp.client-ip=10.30.226.201
Received: by smtp.kernel.org (Postfix) with ESMTPSA id 05665C4CEE7;
	Wed, 22 Oct 2025 15:02:18 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=kernel.org;
	s=k20201202; t=1761145338;
	bh=k3fJI9mIBTsdVJCA44WRE8AYW3GDEJaeAfXMOod7lh0=;
	h=Date:From:To:Cc:Subject:In-Reply-To:References:From;
	b=KJmSQyItxkvT/XA9gWGgFrfwAKV9G/owa2fPY1an14KOo3/4HYjA0PTE4WlNKY133
	 k9Ygk3d45EI/bemx7jbH/QYMmZDGnS5aIs0YVyfkQO2ySoCcG+JBNLw9aMUkLKyASS
	 1qy6aXOCNLtU/UmKhI+ypQ3UZGrSaKtC8TVByeX04pCsqyXQycMV2DCEXUzndJJK4j
	 wktrpVjGUQUaCzXgqWrJnjBdPZhXIK16YC5+gzDp1w8dtOIECbX0QFKR0QYf2gVYGs
	 Jq68LlQhDxhG9rxH1IUQRhHaIzsDBRei63puPkM/6JUHtoJrS9VWnAKnC8OfJ4Hz5R
	 U4Va0WnxCraNg==
Received: from sofa.misterjones.org ([185.219.108.64] helo=goblin-girl.misterjones.org)
	by disco-boy.misterjones.org with esmtpsa  (TLS1.3) tls TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384
	(Exim 4.98.2)
	(envelope-from <maz@kernel.org>)
	id 1vBaLw-0000000GEVa-0JQv;
	Wed, 22 Oct 2025 15:02:16 +0000
Date: Wed, 22 Oct 2025 16:02:15 +0100
Message-ID: <861pmvvv2g.wl-maz@kernel.org>
From: Marc Zyngier <maz@kernel.org>
To: Marek Vasut <marek.vasut@mailbox.org>
Cc: Marek Vasut <marek.vasut+renesas@mailbox.org>,
	linux-arm-kernel@lists.infradead.org,
	Anshuman Khandual <anshuman.khandual@arm.com>,
	Catalin Marinas <catalin.marinas@arm.com>,
	Geert Uytterhoeven <geert+renesas@glider.be>,
	Ryan Roberts <ryan.roberts@arm.com>,
	Will Deacon <will@kernel.org>,
	Yicong Yang <yangyicong@hisilicon.com>,
	linux-renesas-soc@vger.kernel.org
Subject: Re: [PATCH] arm64: guard AMU register access with ARM64_HAS_AMU_EXTN
In-Reply-To: <07391913-aab6-4d92-b75f-278506f51397@mailbox.org>
References: <20251022133621.178546-1-marek.vasut+renesas@mailbox.org>
	<86347bvx0f.wl-maz@kernel.org>
	<07391913-aab6-4d92-b75f-278506f51397@mailbox.org>
User-Agent: Wanderlust/2.15.9 (Almost Unreal) SEMI-EPG/1.14.7 (Harue)
 FLIM-LB/1.14.9 (=?UTF-8?B?R29qxY0=?=) APEL-LB/10.8 EasyPG/1.0.0 Emacs/30.1
 (aarch64-unknown-linux-gnu) MULE/6.0 (HANACHIRUSATO)
Precedence: bulk
X-Mailing-List: linux-renesas-soc@vger.kernel.org
List-Id: <linux-renesas-soc.vger.kernel.org>
List-Subscribe: <mailto:linux-renesas-soc+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:linux-renesas-soc+unsubscribe@vger.kernel.org>
MIME-Version: 1.0 (generated by SEMI-EPG 1.14.7 - "Harue")
Content-Type: text/plain; charset=US-ASCII
X-SA-Exim-Connect-IP: 185.219.108.64
X-SA-Exim-Rcpt-To: marek.vasut@mailbox.org, marek.vasut+renesas@mailbox.org, linux-arm-kernel@lists.infradead.org, anshuman.khandual@arm.com, catalin.marinas@arm.com, geert+renesas@glider.be, ryan.roberts@arm.com, will@kernel.org, yangyicong@hisilicon.com, linux-renesas-soc@vger.kernel.org
X-SA-Exim-Mail-From: maz@kernel.org
X-SA-Exim-Scanned: No (on disco-boy.misterjones.org); SAEximRunCond expanded to false

On Wed, 22 Oct 2025 15:33:38 +0100,
Marek Vasut <marek.vasut@mailbox.org> wrote:
> 
> On 10/22/25 4:20 PM, Marc Zyngier wrote:
> > On Wed, 22 Oct 2025 14:35:28 +0100,
> > Marek Vasut <marek.vasut+renesas@mailbox.org> wrote:
> >> 
> >> The AMU configuration register access may fault and prevent successful
> >> kernel boot. This can occur for example in case the firmware does not
> >> allow AMU counter access from EL1. Guard the AMU configuration register
> >> access with ARM64_HAS_AMU_EXTN to prevent this fault if ARM64_HAS_AMU_EXTN
> >> Kconfig option is explicitly disabled. Other interaction with the AMU is
> >> already guarded by similar ifdeffery.
> >> 
> >> Fixes: 87a1f063464a ("arm64: trap to EL1 accesses to AMU counters from EL0")
> >> Signed-off-by: Marek Vasut <marek.vasut+renesas@mailbox.org>
> >> ---
> >> Cc: Anshuman Khandual <anshuman.khandual@arm.com>
> >> Cc: Catalin Marinas <catalin.marinas@arm.com>
> >> Cc: Geert Uytterhoeven <geert+renesas@glider.be>
> >> Cc: Marc Zyngier <maz@kernel.org>
> >> Cc: Ryan Roberts <ryan.roberts@arm.com>
> >> Cc: Will Deacon <will@kernel.org>
> >> Cc: Yicong Yang <yangyicong@hisilicon.com>
> >> Cc: linux-arm-kernel@lists.infradead.org
> >> Cc: linux-renesas-soc@vger.kernel.org
> >> ---
> >>   arch/arm64/mm/proc.S | 4 ++++
> >>   1 file changed, 4 insertions(+)
> >> 
> >> diff --git a/arch/arm64/mm/proc.S b/arch/arm64/mm/proc.S
> >> index 86818511962b6..123538ffeda6b 100644
> >> --- a/arch/arm64/mm/proc.S
> >> +++ b/arch/arm64/mm/proc.S
> >> @@ -145,7 +145,9 @@ SYM_FUNC_START(cpu_do_resume)
> >>   	ubfx	x11, x11, #1, #1
> >>   	msr	oslar_el1, x11
> >>   	reset_pmuserenr_el0 x0			// Disable PMU access from EL0
> >> +alternative_if ARM64_HAS_AMU_EXTN
> >>   	reset_amuserenr_el0 x0			// Disable AMU access from EL0
> >> +alternative_else_nop_endif
> > 
> > Why?
> > 
> > We ensure that the AMU is available in the macro itself by checking
> > for ID_AA64PFR0_EL1.AMU. If the AMu isn't present on this CPU, we skip
> > the offending sysreg access. This is similar to what we do for the
> > PMU.
> > 
> > Does your HW advertise an AMU, but doesn't actually have one?
>
> The hardware does have AMU, but it is currently blocked in old TFA
> version and access to this AMU register here causes a fault. That's
> why I have to disable ARM64_HAS_AMU_EXTN until the TFA is updated and
> the AMU access is made available on this hardware. But even if I do
> disable ARM64_HAS_AMU_EXTN=n , I get a fault.

Well, I would tend to say that you are trying to update the wrong
piece of SW here. Crashing kernels should be a good incentive for the
board manufacturer to update their firmware pronto, specially when we
are talking of code that has been in the tree for over 5 years...

> This patch is mainly meant to prevent a surprise in case someone does
> set ARM64_HAS_AMU_EXTN=n , and the system still faults on AMU register
> access.

But that doesn't really fix anything if you have a buggy firmware,
because you can't tell which CPUs have been correctly configured, and
which have not. I also don't really get why this hack works for you,
because the feature will be set as soon as one CPU advertises the
feature.

In any case, this sort of terminally broken stuff should be handled as
an IDreg override, for which we have a whole infrastructure already.
There are countless examples in the tree already for similar purposes.

Thanks,

	M.

-- 
Without deviation from the norm, progress is not possible.

